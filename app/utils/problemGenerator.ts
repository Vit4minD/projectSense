export const problemSet: { [key: number]: string } = {
  1: "\\(n \\times 11\\)",
  2: "\\(n \\times 25\\)",
  3: "\\(\\frac{n}{101}\\)",
  4: "\\(\\frac{n}{111}\\)",
  5: "\\(n  \\%  x\\)",
  6: "\\(n - x\\)",
  7: "\\(n + x\\)",
  8: "\\(NN \\times XX\\)",
  9: "\\(\\text{SQUARES}\\)",
  10: "\\(\\text{Tens Trick}\\)",
  11: "\\(\\Sigma : \\frac{n(n+1)}{2}\\)",
  12: "\\(\\text{Estimation}\\)",
  13: "\\(<100 \\text{ Multiplication}\\)",
  14: "\\(>100 \\text{ Multiplication}\\)",
  15: "\\(\\pm< 100 \\text{ Multiplication}\\)",
  16: "\\(\\text{Dec/Frac Conversion}\\)",
  17: "\\(\\text{Dec Addition/Subtraction}\\)",
  18: "\\(\\text{Roman Numerals}\\)",
  19: "\\(\\text{Cubes}\\)",
  20: "\\(\\text{GCD}\\)",
  21: "\\(\\text{LCM}\\)",
  22: "\\(\\text{Conversion into Base 10}\\)",
  23: "\\(\\text{Conversion from Base 10}\\)",
  24: "\\(\\text{Conversion of Base 2, 4, 8}\\)",
  25: "\\(\\text{Sum of Integral Divisors}\\)",
  26: "\\(\\text{Sum of Prime Divisors}\\)",
  27: "\\(\\frac{x}{90}, \\frac{x}{99}, \\frac{x}{900}, \\frac{x}{990}\\)",
  28: "\\(\\text{Triangular Numbers}\\)",
  29: "\\(\\text{Pentagonal Numbers}\\)",
  30: "\\(\\text{Hexagonal Numbers}\\)",
  31: "\\(x^2 + (2x)^2\\)",
  32: "\\(x^2 + (3x)^2\\)",
  33: "\\(\\text{Complex Number Multiplication}\\)",
  34: "\\(\\text{Unit Conversions}\\)",
  35: "\\(x^2 + (x+1)^2\\)",
  36: "\\(\\frac{a}{b} + \\frac{b}{a}\\)",
  37: "\\(\\# \\text{ of distinct diagonals in a polygon}\\)",
  38: "\\(\\text{Sum of } n \\text{ Squares}\\)",
  39: "\\(\\text{Alternating Sum of } n \\text{ Squares}\\)",
  40: "\\(\\text{Mean/Median}\\)",
  41: "\\(\\text{Geometric Mean}\\)",
  42: "\\(\\text{Harmonic Mean}\\)",
  43: "\\(\\text{Estimating Square/Cube Roots}\\)",
  44: "\\(\\frac{x}{100} \\text{ of } y\\)",
  45: "\\(\\frac{a \\times b}{c}\\)",
  46: "\\((a+b) \\times (a-b)\\)",
  47: "\\(\\text{Fibonacci Series}\\)",
  48: "\\(\\text{Special Sum of Squares}\\)",
  49: "\\(\\text{3-digit Squares}\\)",
  50: "\\(\\text{3-digit Cubes}\\)",
  51: "\\(\\frac{x^3-y^3}{x-y}\\)",
};

export const problemFunction: { [key: string]: Function } = {
  "1": n11,
};

function n11() {
  let num = Math.floor(Math.random() * (999 - 15 + 1)) + 15;
  return {
    body: "" + num + " * 11",
    ans: "" + num * 11,
  };
}
